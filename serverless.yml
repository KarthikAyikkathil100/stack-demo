service: StackDemoNew
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage}
  versionFunctions: false

package:
  individually: true
  patterns:
    - '!node_modules/**'

plugins:
  - serverless-plugin-split-stacks

custom:
  ACCOUNT_ID: !Ref AWS::AccountId
  REGION: !Ref AWS::Region
  STAGE: ${self:provider.stage}
  APPLICATION: 'StackDemo'
  splitStacks:
    perFunction: false
    perType: false
    perGroupFunction: true
    nestedStackCount: 10

resources:
  Resources:
    F1Role:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:custom.STAGE}-F1Role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com 
              Action:
                - sts:AssumeRole
    F2Role:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:custom.STAGE}-F2Role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com 
              Action:
                - sts:AssumeRole
    CloudwatchAccessPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: ${self:custom.STAGE}-CloudwatchAccessPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource: '*'
        Roles:
          - !Ref F2Role
          - !Ref F1Role



functions:
  F1Function:
    name: ${self:custom.STAGE}-F1Function
    runtime: nodejs18.x
    handler: './functions/f1.handler'
    role: F1Role
    package:
      patterns:
        - 'functions/f1.handler.js'
    events:
      - http:
          path: '/users/f1'
          method: 'get'
          cors: true
  F2Function:
    name: ${self:custom.STAGE}-F2Function
    runtime: nodejs18.x
    handler: './functions/f2.handler'
    role: F2Role
    package:
      patterns:
        - 'functions/f2.handler.js'
    events:
      - http:
          path: '/admins/f2'
          method: 'get'
          cors: true